name: CMake Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup CMake
      uses: lukka/get-cmake@latest

    - name: Create Build Directory
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "macOS" ]; then
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_OSX_ARCHITECTURES="x86_64;arm64"
        else
          cmake .. -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
        fi

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --config ${{env.BUILD_TYPE}} --verbose

    - name: List Build Output (Debug)
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: |
        echo "Build directory contents:"
        ls -la
        if [ "$RUNNER_OS" == "Windows" ]; then
          ls -la ${{env.BUILD_TYPE}}/ || true
        fi

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: CUebungsaufgaben-${{ matrix.os }}
        path: |
          build/**/*.exe
          build/**/CUebungsaufgaben
          build/CUebungsaufgaben
          build/Release/CUebungsaufgaben.exe
          build/Debug/CUebungsaufgaben.exe
        if-no-files-found: warn
